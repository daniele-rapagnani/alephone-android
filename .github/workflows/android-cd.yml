name: Android CD

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "The name of this release"
        required: true
      releaseMessage:
        description: "The body of this release"
        required: true
        default: "New release"

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Uninstall CMake 3.18
      run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --uninstall "cmake;3.18.1" --sdk_root=${ANDROID_SDK_ROOT}

    - name: Installs CMake
      uses: Symbitic/install-cmake@v0.1.0
      with:
        cmake: '3.14.4'

    # See: https://github.com/android/ndk/issues/929

    - name: Apply NDK sysroot patch
      run: sudo cp "${{ github.workspace }}/.github/patched.android.toolchain.cmake" "${ANDROID_SDK_ROOT}/ndk-bundle/build/cmake/android.toolchain.cmake"

    - name: Build with Gradle
      run: ./gradlew app:assembleRelease

    - name: Sign Aleph One APKs
      id: sign_alephone
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.releaseTag }}
        release_name: Release ${{ github.event.inputs.releaseTag }}
        body: ${{ github.event.inputs.releaseBody }}
        draft: true
        prerelease: true

    - name: Upload Aleph One
      id: upload_alephone
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.sign_alephone.outputs.signedReleaseFile }}
        asset_name: alephone-signed.apk
        asset_content_type: application/vnd.android.package-archive

name: Android CD

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "The name of this release"
        required: true
      releaseMessage:
        description: "The body of this release"
        required: true
        default: "New release"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Installs CMake
      uses: Symbitic/install-cmake@v0.1.0
      with:
        cmake: '3.14.4'
    - name: List Android SDK packages
      run: /usr/local/lib/android/sdk/tools/bin/sdkmanager --list
    - name: Build with Gradle
      run: ./gradlew assembleMarathon2Release
    - name: Sign Marathon 2 APKs
      id: sign_marathon2
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/marathon2/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
    #- name: Sign Marathon APKs
    #  id: sign_marathon
    #  uses: r0adkll/sign-android-release@v1
    #  with:
    #    releaseDirectory: app/build/outputs/apk/marathon/release
    #    signingKeyBase64: ${{ secrets.SIGNING_KEY }}
    #    alias: ${{ secrets.ALIAS }}
    #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
    #    keyPassword: ${{ secrets.KEY_PASSWORD }}
    #- name: Sign Marathon Infinity APKs
    #  id: sign_marathon_inf
    #  uses: r0adkll/sign-android-release@v1
    #  with:
    #    releaseDirectory: app/build/outputs/apk/marathonInfinity/release
    #    signingKeyBase64: ${{ secrets.SIGNING_KEY }}
    #    alias: ${{ secrets.ALIAS }}
    #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
    #    keyPassword: ${{ secrets.KEY_PASSWORD }}
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.releaseTag }}
        release_name: Release ${{ github.event.inputs.releaseTag }}
        body: ${{ github.event.inputs.releaseBody }}
        draft: true
        prerelease: true
    #- name: Upload Marathon
    #  id: upload-marathon
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ${{ steps.sign_marathon.outputs.signedReleaseFile }}
    #    asset_name: marathon-signed.apk
    #    asset_content_type: application/vnd.android.package-archive
    - name: Upload Marathon 2
      id: upload-marathon2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.sign_marathon2.outputs.signedReleaseFile }}
        asset_name: marathon2-signed.apk
        asset_content_type: application/vnd.android.package-archive
    #- name: Upload Marathon Infinity
    #  id: upload-marathonInf
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ${{ steps.sign_marathon_inf.outputs.signedReleaseFile }}
    #    asset_name: marathon-inf-signed.apk
    #    asset_content_type: application/vnd.android.package-archive
